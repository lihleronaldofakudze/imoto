class Constants {
  // format money with comma
  String formatMoney(int money) {
    return money.toString().replaceAllMapped(
        RegExp(r'(\d{1,3})(?=(\d{3})+(?!\d))'), (Match m) => '${m[1]},');
  }

  final List<String> carBrands = [
    'Abarth',
    'Alfa Romeo',
    'Aston Martin',
    'Audi',
    'BMW',
    'Bentley',
    'Cadillac',
    'CAM',
    'Chana',
    'Chevrolet',
    'Chery',
    'Chrysler',
    'CMC',
    'Citroen',
    'Mitsubishi',
    'Dacia',
    'Daewoo',
    'Daihatsu',
    'Daimler',
    'DFSK',
    'Dodge',
    'FAW',
    'Ferrari',
    'Fiant',
    'Foton',
    'Ford',
    'GoNow',
    'Geely',
    'GWM',
    'Honda',
    'Honda',
    'Hyundai',
    'Hummer',
    'Infiniti',
    'Isuzu',
    'Iveco',
    'Jaguar',
    'Jeep',
    'JMC',
    'Lamborghini',
    'Kia',
    'Lancia',
    'Land Rover',
    'LDV',
    'Lexus',
    'Lotus',
    'Maserati',
    'Mahindra',
    'Maybach',
    'Mazda',
    'Mercedes-Benz',
    'Mercedes-AMG',
    'Meiya',
    'MG',
    'MINI',
    'Nissan',
    'Noble',
    'Opel',
    'Peugeot',
    'Porsche',
    'Proton',
    'Renault',
    'Rover',
    'Maxus',
    'Saic',
    'Saab',
    'SEAT',
    'Smart',
    'SsangYong',
    'Subaru',
    'Suzuki',
    'Tata',
    'Toyota',
    'TVR',
    'Volkswagen',
    'Volvo',
    'ZX Auto',
    'McLaren',
    'Rolls-Royce',
    'Changan',
    'Datsun',
    'Mercedes-Maybach',
    'Truimph',
    'AMC Rambler',
    'Austin',
    'Buick',
    'DKW',
    'Hillman',
    'KCC',
    'Lynx',
    'MGA',
    'MGB',
    'Morris',
    'Pontiac',
    'Range Rover',
    'Valiant',
    'Vauxhall',
    'Willys Jeep',
    'Morgan',
    'Birkin',
    'Golden Journey',
    'Sunbeam',
    'Backdraft',
    'KTM',
    'London',
    'AC',
    'Jinbei',
    'BAW',
    'Willys',
    'Austin-Healey',
    'Ariel',
    'BAIC',
    'Oldsmobile',
    'Haval',
    'JAC',
    'Packard',
    'Puma',
    'Secma',
    'De Tomaso',
    'Lola',
    'Leyland',
    'GMC',
    'Jensen',
    'Plymouth',
    'DAF',
    'Pagani',
    'Bajaj',
    'HUMBER',
    'Shelby',
    'Asia',
    'Nash',
    'Caterham',
    'Millennium',
    'Goggomobil'
  ];
  final List<String> bodyTypes = [
    'Cabriolet',
    'Coupe',
    'Crew Bus',
    'Double Cab',
    'Extended Cab',
    'Fastback',
    'Hatchback',
    'King Cab',
    'LCV',
    'Minibus',
    'MPV',
    'Panel Van',
    'Sedan',
    'Single Cab',
    'Sportback',
    'Station Wagon',
    'Supercab',
    'SUV'
  ];
  final List<String> conditions = ['New', 'Used'];
  final List<String> engineTypes = ['Automatic', 'Manual'];
  final List<String> drivenWheels = ['Front', 'Back', 'Both'];
  final List<String> enginePositions = ['Front', 'Back'];
  final List<String> fuelTypes = ['Petrol', 'Diesel'];

  final String mf2 =
      'https://firebasestorage.googleapis.com/v0/b/imoto-eswatini.appspot.com/o/imoto.png?alt=media&token=cdd91ef8-1c6a-4305-a3e4-b5d64c0f1c2c';
  final String appLink =
      'http://play.google.com/store/apps/details?id=io.cloutdevelopers.imoto';
}
